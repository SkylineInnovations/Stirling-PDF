name: Build repo

on:
  push:
    branches: ["main"]
  pull_request_target:
    branches: ["main"]

permissions:
  contents: read

jobs:
  labeler:
    runs-on: ubuntu-latest
    permissions:
      pull-requests: write
    steps:
      - name: Harden Runner
        uses: step-security/harden-runner@0080882f6c36860b6ba35c610c98ce87d4e2f26f # v2.10.2
        with:
          egress-policy: audit

      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2

      - name: Apply Labels
        uses: actions/labeler@8558fd74291d67161a8a78ce36a881fa63b766a9 # v5.0.0
        with:
          repo-token: ${{ secrets.GITHUB_TOKEN }}
          configuration-path: .github/labeler-config.yml
          sync-labels: true
  build:
    runs-on: ubuntu-latest

    permissions:
      actions: read
      security-events: write

    strategy:
      fail-fast: false
      matrix:
        jdk-version: [17, 21]

    steps:
      - name: Harden Runner
        uses: step-security/harden-runner@c95a14d0e5bab51a9f56296a4eb0e416910cd350 # v2.10.3
        with:
          egress-policy: audit

      - name: Checkout repository
        if: contains(github.event.pull_request.labels.*.name, 'build') || github.event_name == 'push'
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2

      - name: Set up JDK ${{ matrix.jdk-version }}
        if: contains(github.event.pull_request.labels.*.name, 'build') || github.event_name == 'push'
        uses: actions/setup-java@7a6d8a8234af8eb26422e24e3006232cccaa061b # v4.6.0
        with:
          java-version: ${{ matrix.jdk-version }}
          distribution: "temurin"

      - name: Build with Gradle and no spring security
        if: contains(github.event.pull_request.labels.*.name, 'build') || github.event_name == 'push'
        run: ./gradlew clean build
        env:
          DOCKER_ENABLE_SECURITY: false

      - name: Build with Gradle and with spring security
        if: contains(github.event.pull_request.labels.*.name, 'build') || github.event_name == 'push'
        run: ./gradlew clean build
        env:
          DOCKER_ENABLE_SECURITY: true

      - name: Upload Test Reports
        if: (contains(github.event.pull_request.labels.*.name, 'build') || github.event_name == 'push') && always()
        uses: actions/upload-artifact@65c4c4a1ddee5b72f698fdd19549f0f0fb45cf08 # v4.6.0
        with:
          name: test-reports-jdk-${{ matrix.jdk-version }}
          path: |
            build/reports/tests/
            build/test-results/
            build/reports/problems/
          retention-days: 3

  docker-compose-tests:
    # if: github.event_name == 'push' && github.ref == 'refs/heads/main' ||
    #     (github.event_name == 'pull_request' &&
    #     contains(github.event.pull_request.labels.*.name, 'licenses') == false &&
    #     (
    #       contains(github.event.pull_request.labels.*.name, 'Front End') ||
    #       contains(github.event.pull_request.labels.*.name, 'Java') ||
    #       contains(github.event.pull_request.labels.*.name, 'Back End') ||
    #       contains(github.event.pull_request.labels.*.name, 'Security') ||
    #       contains(github.event.pull_request.labels.*.name, 'API') ||
    #       contains(github.event.pull_request.labels.*.name, 'Docker') ||
    #       contains(github.event.pull_request.labels.*.name, 'Test')
    #     )
    #     )

    runs-on: ubuntu-latest

    steps:
      - name: Harden Runner
        uses: step-security/harden-runner@0080882f6c36860b6ba35c610c98ce87d4e2f26f # v2.10.2
        with:
          egress-policy: audit

      - name: Checkout Repository
        if: contains(github.event.pull_request.labels.*.name, 'build') || github.event_name == 'push'
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2

      - name: Set up Java 17
        if: contains(github.event.pull_request.labels.*.name, 'build') || github.event_name == 'push'
        uses: actions/setup-java@7a6d8a8234af8eb26422e24e3006232cccaa061b # v4.6.0
        with:
          java-version: "17"
          distribution: "adopt"

      - name: Set up Docker Buildx
        if: contains(github.event.pull_request.labels.*.name, 'build') || github.event_name == 'push'
        uses: docker/setup-buildx-action@6524bf65af31da8d45b59e8c27de4bd072b392f5 # v3.8.0

      - name: Install Docker Compose
        if: contains(github.event.pull_request.labels.*.name, 'build') || github.event_name == 'push'
        run: |
          sudo curl -SL "https://github.com/docker/compose/releases/download/v2.32.2/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
          sudo chmod +x /usr/local/bin/docker-compose

      - name: Set up Python
        if: contains(github.event.pull_request.labels.*.name, 'build') || github.event_name == 'push'
        uses: actions/setup-python@0b93645e9fea7318ecaed2b359559ac225c90a2b # v5.3.0
        with:
          python-version: "3.12"

      - name: Pip requirements
        if: contains(github.event.pull_request.labels.*.name, 'build') || github.event_name == 'push'
        run: |
           pip install --require-hashes -r ./cucumber/requirements.txt

      - name: Run Docker Compose Tests
        if: contains(github.event.pull_request.labels.*.name, 'build') || github.event_name == 'push'
        run: |
          chmod +x ./test.sh
          ./test.sh
